/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    MarquisCore: {
      address:
        "0x05a25352162e2ee177113d2d785d4c61a1e50e6cbda47bc37fe9179b477202b0",
      abi: [
        {
          type: "impl",
          name: "MarquisCoreImpl",
          interface_name: "contracts::MarquisCore::IMarquisCore",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::MarquisCore::IMarquisCore",
          items: [
            {
              type: "function",
              name: "gretting",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_gretting",
              inputs: [
                {
                  name: "new_greeting",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "amount_eth",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "withdraw",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "premium",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::GreetingChanged",
          kind: "struct",
          members: [
            {
              name: "greeting_setter",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_greeting",
              type: "core::byte_array::ByteArray",
              kind: "key",
            },
            {
              name: "premium",
              type: "core::bool",
              kind: "data",
            },
            {
              name: "value",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "GreetingChanged",
              type: "contracts::MarquisCore::MarquisCore::GreetingChanged",
              kind: "nested",
            },
          ],
        },
      ],
    },
    Ludo: {
      address:
        "0x0532a8f45ecf845b83f8f10b5f964fbc753f2098d5bc05cfd0a0efd8a7ad311c",
      abi: [
        {
          type: "impl",
          name: "LudoImpl",
          interface_name: "contracts::games::Ludo::ILudo",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::games::Ludo::LudoMove",
          members: [
            {
              name: "token_id",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::IMarquisGame::VerifiableRandomNumber",
          members: [
            {
              name: "random_number",
              type: "core::integer::u256",
            },
            {
              name: "v",
              type: "core::integer::u32",
            },
            {
              name: "r",
              type: "core::integer::u256",
            },
            {
              name: "s",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::games::Ludo::ILudo",
          items: [
            {
              type: "function",
              name: "play",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
                {
                  name: "ludo_move",
                  type: "contracts::games::Ludo::LudoMove",
                },
                {
                  name: "verifiableRandomNumberArray",
                  type: "core::array::Array::<contracts::interfaces::IMarquisGame::VerifiableRandomNumber>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "MarquisGameImpl",
          interface_name: "contracts::interfaces::IMarquisGame::IMarquisGame",
        },
        {
          type: "struct",
          name: "contracts::interfaces::IMarquisGame::SessionData",
          members: [
            {
              name: "player_count",
              type: "core::integer::u32",
            },
            {
              name: "status",
              type: "core::felt252",
            },
            {
              name: "next_player",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "nonce",
              type: "core::integer::u256",
            },
            {
              name: "start_time",
              type: "core::integer::u64",
            },
            {
              name: "last_play_time",
              type: "core::integer::u64",
            },
            {
              name: "time_left_to_play",
              type: "core::integer::u64",
            },
            {
              name: "time_left_to_join",
              type: "core::integer::u64",
            },
          ],
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::starknet::eth_address::EthAddress",
          members: [
            {
              name: "address",
              type: "core::felt252",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::interfaces::IMarquisGame::IMarquisGame",
          items: [
            {
              type: "function",
              name: "create_session",
              inputs: [
                {
                  name: "token",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "join_session",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "session",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::interfaces::IMarquisGame::SessionData",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "add_supported_token",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "fee",
                  type: "core::integer::u16",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "remove_supported_token",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "name",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "marquis_oracle_address",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::eth_address::EthAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "marquis_core_address",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_supported_token",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "token_fee",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u16",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "marquis_oracle_address",
              type: "core::starknet::eth_address::EthAddress",
            },
            {
              name: "marquis_core_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::components::MarquisGame::MarquisGame::CampaignCreated",
          kind: "struct",
          members: [
            {
              name: "campaign_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "target_amount",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "deadline",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "data_cid",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::components::MarquisGame::MarquisGame::Event",
          kind: "enum",
          variants: [
            {
              name: "CampaignCreated",
              type: "contracts::components::MarquisGame::MarquisGame::CampaignCreated",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::games::Ludo::Ludo::Event",
          kind: "enum",
          variants: [
            {
              name: "MarquisGameEvent",
              type: "contracts::components::MarquisGame::MarquisGame::Event",
              kind: "flat",
            },
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
          ],
        },
      ],
    },
  },
} as const;

export default deployedContracts;
