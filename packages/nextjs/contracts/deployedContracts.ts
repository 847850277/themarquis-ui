/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    MarquisCore: {
      address:
        "0x74c3adde87d0f2c0d30844069624f53e4c42ff83ff40957075c1a1d3027b420",
      abi: [
        {
          type: "impl",
          name: "UpgradeableImpl",
          interface_name: "openzeppelin::upgrades::interface::IUpgradeable",
        },
        {
          type: "interface",
          name: "openzeppelin::upgrades::interface::IUpgradeable",
          items: [
            {
              type: "function",
              name: "upgrade",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "MarquisCoreImpl",
          interface_name: "contracts::MarquisCore::IMarquisCore",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::MarquisCore::IMarquisCore",
          items: [
            {
              type: "function",
              name: "withdraw",
              inputs: [
                {
                  name: "token",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "beneficiary",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "update_supported_token_with_fee",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "is_supported",
                  type: "core::bool",
                },
                {
                  name: "fee",
                  type: "core::integer::u16",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "supported_token_with_fee",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "(core::bool, core::integer::u16, core::integer::u16)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
          kind: "struct",
          members: [
            {
              name: "class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Upgraded",
              type: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::UpdateSupportedTokenWithFee",
          kind: "struct",
          members: [
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "fee",
              type: "core::integer::u16",
              kind: "data",
            },
            {
              name: "is_supported",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::Withdraw",
          kind: "struct",
          members: [
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "beneficiary",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "UpgradeableEvent",
              type: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
              kind: "flat",
            },
            {
              name: "UpdateSupportedTokenWithFee",
              type: "contracts::MarquisCore::MarquisCore::UpdateSupportedTokenWithFee",
              kind: "nested",
            },
            {
              name: "Withdraw",
              type: "contracts::MarquisCore::MarquisCore::Withdraw",
              kind: "nested",
            },
          ],
        },
      ],
    },
    Ludo: {
      address:
        "0x65239ac10011e9f1aba8393ec1c0afeebfa07d560b67fd2f65fe16903f6029c",
      abi: [
        {
          type: "impl",
          name: "LudoImpl",
          interface_name: "contracts::interfaces::ILudo::ILudo",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::ILudo::LudoMove",
          members: [
            {
              name: "token_id",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::IMarquisGame::VerifiableRandomNumber",
          members: [
            {
              name: "random_number",
              type: "core::integer::u256",
            },
            {
              name: "v",
              type: "core::integer::u32",
            },
            {
              name: "r",
              type: "core::integer::u256",
            },
            {
              name: "s",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::IMarquisGame::SessionData",
          members: [
            {
              name: "player_count",
              type: "core::integer::u32",
            },
            {
              name: "status",
              type: "core::felt252",
            },
            {
              name: "next_player",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "nonce",
              type: "core::integer::u256",
            },
            {
              name: "play_amount",
              type: "core::integer::u256",
            },
            {
              name: "play_token",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::ILudo::SessionUserStatus",
          members: [
            {
              name: "player_id",
              type: "core::integer::u32",
            },
            {
              name: "player_tokens_position",
              type: "(core::integer::u256, core::integer::u256, core::integer::u256, core::integer::u256)",
            },
            {
              name: "player_winning_tokens",
              type: "(core::bool, core::bool, core::bool, core::bool)",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::ILudo::LudoSessionStatus",
          members: [
            {
              name: "users",
              type: "(contracts::interfaces::ILudo::SessionUserStatus, contracts::interfaces::ILudo::SessionUserStatus, contracts::interfaces::ILudo::SessionUserStatus, contracts::interfaces::ILudo::SessionUserStatus)",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::interfaces::ILudo::ILudo",
          items: [
            {
              type: "function",
              name: "play",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
                {
                  name: "ludo_move",
                  type: "contracts::interfaces::ILudo::LudoMove",
                },
                {
                  name: "verifiableRandomNumberArray",
                  type: "core::array::Array::<contracts::interfaces::IMarquisGame::VerifiableRandomNumber>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_session_status",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "(contracts::interfaces::IMarquisGame::SessionData, contracts::interfaces::ILudo::LudoSessionStatus)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "MarquisGameImpl",
          interface_name: "contracts::interfaces::IMarquisGame::IMarquisGame",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::starknet::eth_address::EthAddress",
          members: [
            {
              name: "address",
              type: "core::felt252",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::interfaces::IMarquisGame::IMarquisGame",
          items: [
            {
              type: "function",
              name: "create_session",
              inputs: [
                {
                  name: "token",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "join_session",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "owner_finish_session",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
                {
                  name: "winner_id",
                  type: "core::integer::u32",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "name",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "marquis_oracle_address",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::eth_address::EthAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "marquis_core_address",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_supported_token",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "token_fee",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u16",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "marquis_oracle_address",
              type: "core::starknet::eth_address::EthAddress",
            },
            {
              name: "marquis_core_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::IMarquisGame::SessionCreated",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "creator",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::IMarquisGame::SessionJoined",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "player_count",
              type: "core::integer::u32",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::components::MarquisGame::MarquisGame::Event",
          kind: "enum",
          variants: [
            {
              name: "SessionCreated",
              type: "contracts::interfaces::IMarquisGame::SessionCreated",
              kind: "nested",
            },
            {
              name: "SessionJoined",
              type: "contracts::interfaces::IMarquisGame::SessionJoined",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::ILudo::TokenMove",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "player_id",
              type: "core::integer::u32",
              kind: "key",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "steps",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "next_player_id",
              type: "core::integer::u32",
              kind: "data",
            },
            {
              name: "next_session_nonce",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::ILudo::SessionFinished",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "winning_player_id",
              type: "core::integer::u32",
              kind: "key",
            },
            {
              name: "winner_amount",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::games::Ludo::Ludo::Event",
          kind: "enum",
          variants: [
            {
              name: "MarquisGameEvent",
              type: "contracts::components::MarquisGame::MarquisGame::Event",
              kind: "flat",
            },
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "TokenMove",
              type: "contracts::interfaces::ILudo::TokenMove",
              kind: "nested",
            },
            {
              name: "SessionFinished",
              type: "contracts::interfaces::ILudo::SessionFinished",
              kind: "nested",
            },
          ],
        },
      ],
    },
  },
  sepolia: {
    MarquisCore: {
      address:
        "0x338611a7b5b0b1ba09931617841629f14debb8d1973c7de6891e950b3a098d0",
      abi: [
        {
          type: "impl",
          name: "UpgradeableImpl",
          interface_name: "openzeppelin::upgrades::interface::IUpgradeable",
        },
        {
          type: "interface",
          name: "openzeppelin::upgrades::interface::IUpgradeable",
          items: [
            {
              type: "function",
              name: "upgrade",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "MarquisCoreImpl",
          interface_name: "contracts::MarquisCore::IMarquisCore",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::MarquisCore::IMarquisCore",
          items: [
            {
              type: "function",
              name: "withdraw",
              inputs: [
                {
                  name: "token",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "beneficiary",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "update_supported_token_with_fee",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "is_supported",
                  type: "core::bool",
                },
                {
                  name: "fee",
                  type: "core::integer::u16",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "supported_token_with_fee",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "(core::bool, core::integer::u16, core::integer::u16)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
          kind: "struct",
          members: [
            {
              name: "class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Upgraded",
              type: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::UpdateSupportedTokenWithFee",
          kind: "struct",
          members: [
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "fee",
              type: "core::integer::u16",
              kind: "data",
            },
            {
              name: "is_supported",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::Withdraw",
          kind: "struct",
          members: [
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "beneficiary",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::MarquisCore::MarquisCore::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "UpgradeableEvent",
              type: "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
              kind: "flat",
            },
            {
              name: "UpdateSupportedTokenWithFee",
              type: "contracts::MarquisCore::MarquisCore::UpdateSupportedTokenWithFee",
              kind: "nested",
            },
            {
              name: "Withdraw",
              type: "contracts::MarquisCore::MarquisCore::Withdraw",
              kind: "nested",
            },
          ],
        },
      ],
    },
    Ludo: {
      address:
        "0x292823d65bd99899df8433c33e0855cefc1445ff8f59a3121fc788dcc11eee4",
      abi: [
        {
          type: "impl",
          name: "LudoImpl",
          interface_name: "contracts::interfaces::ILudo::ILudo",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::ILudo::LudoMove",
          members: [
            {
              name: "token_id",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::IMarquisGame::VerifiableRandomNumber",
          members: [
            {
              name: "random_number",
              type: "core::integer::u256",
            },
            {
              name: "v",
              type: "core::integer::u32",
            },
            {
              name: "r",
              type: "core::integer::u256",
            },
            {
              name: "s",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::IMarquisGame::SessionData",
          members: [
            {
              name: "player_count",
              type: "core::integer::u32",
            },
            {
              name: "status",
              type: "core::felt252",
            },
            {
              name: "next_player",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "nonce",
              type: "core::integer::u256",
            },
            {
              name: "play_amount",
              type: "core::integer::u256",
            },
            {
              name: "play_token",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::ILudo::SessionUserStatus",
          members: [
            {
              name: "player_id",
              type: "core::integer::u32",
            },
            {
              name: "player_tokens_position",
              type: "(core::integer::u256, core::integer::u256, core::integer::u256, core::integer::u256)",
            },
            {
              name: "player_winning_tokens",
              type: "(core::bool, core::bool, core::bool, core::bool)",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::interfaces::ILudo::LudoSessionStatus",
          members: [
            {
              name: "users",
              type: "(contracts::interfaces::ILudo::SessionUserStatus, contracts::interfaces::ILudo::SessionUserStatus, contracts::interfaces::ILudo::SessionUserStatus, contracts::interfaces::ILudo::SessionUserStatus)",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::interfaces::ILudo::ILudo",
          items: [
            {
              type: "function",
              name: "play",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
                {
                  name: "ludo_move",
                  type: "contracts::interfaces::ILudo::LudoMove",
                },
                {
                  name: "verifiableRandomNumberArray",
                  type: "core::array::Array::<contracts::interfaces::IMarquisGame::VerifiableRandomNumber>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_session_status",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "(contracts::interfaces::IMarquisGame::SessionData, contracts::interfaces::ILudo::LudoSessionStatus)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "MarquisGameImpl",
          interface_name: "contracts::interfaces::IMarquisGame::IMarquisGame",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::starknet::eth_address::EthAddress",
          members: [
            {
              name: "address",
              type: "core::felt252",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::interfaces::IMarquisGame::IMarquisGame",
          items: [
            {
              type: "function",
              name: "create_session",
              inputs: [
                {
                  name: "token",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "join_session",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "owner_finish_session",
              inputs: [
                {
                  name: "session_id",
                  type: "core::integer::u256",
                },
                {
                  name: "winner_id",
                  type: "core::integer::u32",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "name",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "marquis_oracle_address",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::eth_address::EthAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "marquis_core_address",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_supported_token",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "token_fee",
              inputs: [
                {
                  name: "token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u16",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "marquis_oracle_address",
              type: "core::starknet::eth_address::EthAddress",
            },
            {
              name: "marquis_core_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::IMarquisGame::SessionCreated",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "token",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "creator",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::IMarquisGame::SessionJoined",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "player",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "player_count",
              type: "core::integer::u32",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::components::MarquisGame::MarquisGame::Event",
          kind: "enum",
          variants: [
            {
              name: "SessionCreated",
              type: "contracts::interfaces::IMarquisGame::SessionCreated",
              kind: "nested",
            },
            {
              name: "SessionJoined",
              type: "contracts::interfaces::IMarquisGame::SessionJoined",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::ILudo::TokenMove",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "player_id",
              type: "core::integer::u32",
              kind: "key",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "steps",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "next_player_id",
              type: "core::integer::u32",
              kind: "data",
            },
            {
              name: "next_session_nonce",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::interfaces::ILudo::SessionFinished",
          kind: "struct",
          members: [
            {
              name: "session_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "winning_player_id",
              type: "core::integer::u32",
              kind: "key",
            },
            {
              name: "winner_amount",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::games::Ludo::Ludo::Event",
          kind: "enum",
          variants: [
            {
              name: "MarquisGameEvent",
              type: "contracts::components::MarquisGame::MarquisGame::Event",
              kind: "flat",
            },
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "TokenMove",
              type: "contracts::interfaces::ILudo::TokenMove",
              kind: "nested",
            },
            {
              name: "SessionFinished",
              type: "contracts::interfaces::ILudo::SessionFinished",
              kind: "nested",
            },
          ],
        },
      ],
    },
  },
} as const;

export default deployedContracts;
